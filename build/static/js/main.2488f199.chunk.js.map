{"version":3,"sources":["Word.js","App.js","serviceWorker.js","index.js"],"names":["Word","title","isActive","className","App","props","getDate","date","Date","minutePoint","getMinutes","minutes","hours","getHours","setState","state","words","condition","setInterval","this","map","word","i","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2488f199.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nfunction Word({title, isActive}) {\r\n  return (\r\n    <div className={isActive ? \"word active\" : \"word\"}>{title}</div>\r\n  )\r\n};\r\n\r\n\r\nexport default Word;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Word from \"./Word\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: null,\n      minutes: null,\n      minutePoint: null,\n      words: [\n        {\n          title: 'it is',\n          condition: () => true,\n        }, {\n          title: 'half',\n          condition: () => this.state.minutes === 30,\n        }, {\n          title: 'ten',\n          condition: () => this.state.minutes === 10,\n        }, {\n          title: 'quarter',\n          condition: () => this.state.minutes === 15 || this.state.minutes === 45,\n        }, {\n          title: 'twenty',\n          condition: () => this.state.minutes === 20 || this.state.minutes === 25 || this.state.minutes === 40 || this.state.minutes === 35\n        }, {\n          title: 'five',\n          condition: () => this.state.minutes === 5 || this.state.minutes === 25 || this.state.minutes === 35 || this.state.minutes === 55,\n        }, {\n          title: 'minutes',\n          condition: () => this.state.minutes > 0 && this.state.minutes !== 30 && this.state.minutes !== 15 && this.state.minutes !== 45,\n        }, {\n          title: 'to',\n          condition: () => this.state.minutes > 30,\n        }, {\n          title: 'past',\n          condition: () => this.state.minutes <= 30,\n        }, {\n          title: 'two',\n          condition: () => this.state.hours === 2,\n        }, {\n          title: 'three',\n          condition: () => this.state.hours === 3,\n        }, {\n          title: 'one',\n          condition: () => this.state.hours === 1,\n        }, {\n          title: 'four',\n          condition: () => this.state.hours === 4,\n        }, {\n          title: 'five',\n          condition: () => this.state.hours === 5,\n        }, {\n          title: 'six',\n          condition: () => this.state.hours === 6,\n        }, {\n          title: 'seven',\n          condition: () => this.state.hours === 7,\n        }, {\n          title: 'eight',\n          condition: () => this.state.hours === 8,\n        }, {\n          title: 'nine',\n          condition: () => this.state.hours === 9,\n        }, {\n          title: 'ten',\n          condition: () => this.state.hours === 10,\n        }, {\n          title: 'eleven',\n          condition: () => this.state.hours === 11,\n        }, {\n          title: 'twelve',\n          condition: () => this.state.hours === 12,\n        }, {\n          title: 'o\\'clock',\n          condition: () => true,\n        },\n\n      ]\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.getDate, 1000)\n  }\n\n  getDate = () => {\n    const date = new Date();\n    const minutePoint = (date.getMinutes() + 60) % 5;\n    const minutes = date.getMinutes() - minutePoint;\n    const hours = minutes <= 30\n      ? (date.getHours() + 24) % 12 || 12\n      : ((date.getHours() + 24) % 12) + 1 || 1;\n\n    this.setState({\n      hours,\n      minutes,\n      minutePoint\n    })\n  };\n\n  render() {\n    const {minutePoint} = this.state;\n    return (\n      <div className=\"App\">\n        <main className=\"App-container\">\n          <div className=\"clock-box\">\n            {this.state.words.map((word, i) => (\n              <Word\n                isActive={word.condition()}\n                title={word.title}\n                key={i}\n              />\n            ))}\n            <ul className=\"dots\">\n              <li className={minutePoint >= 1 ? \"dot active\" : \"dot\"}/>\n              <li className={minutePoint >= 2 ? \"dot active\" : \"dot\"}/>\n              <li className={minutePoint >= 3 ? \"dot active\" : \"dot\"}/>\n              <li className={minutePoint === 4 ? \"dot active\" : \"dot\"}/>\n            </ul>\n          </div>\n\n        </main>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}